/**
 * Hypo - Dependency injection for JavaScript.  Simple and to the point.
 *
 * copyright: (c) 2012 by Ryan Lynch
 * 
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
!function(e){e("Hypo",function(){var e=function(e){this.definitions=e,this.singletonMap={},this.generateSingletons()};return e.prototype={HypoError:function(){var e=function(e){this.name="HypoError",this.message=e};return e.prototype=new Error,e}(),generateSingletons:function(){var e;for(var t in this.definitions)this.definitions.hasOwnProperty(t)&&(e=this.definitions[t],!e.transient&&!e.lazy&&!e.abstract&&this.getEntity(t))},getEntity:function(e){var t=this.parseDefinition(e),n,r,i,s,o,u;if(t.abstract)throw new this.HypoError('"'+e+'" is an abstract entity, and cannot be retrieved.');if(!t.transient&&this.singletonMap[e])r=this.singletonMap[e];else{if(t.ctor)o=t.ctor,i=t.args;else{if(!t.factory)throw new this.HypoError('Non-abstract entity "'+e+'" must have a ctor or factory defined.');u=typeof t.factory.context=="string"?this.getEntity(t.factory.context):t.factory.context,o=u[t.factory.method],i=t.factory.args}r=this.createEntity(o,i,e,u),t.transient||(this.singletonMap[e]=r),this.applyProperties(r,t.props)}return r},createEntity:function(e,t,n,r){function h(e){if(e)for(l=0;l<e.length;l++)if(e[l].entity){var t=new o.HypoError('Circular dependency between "'+n+'" and "'+e[l].entity+'".');if(e[l].entity==n)throw t;u=o.definitions[e[l].entity];if(u.factory){if(u.factory.context==n)throw t;u.factory.args&&findCircularArguments(u.factory.args)}u.args&&h(u.args)}}var i=function(){},s=[],o=this,u,a,f,l,c;if(typeof e!="function")throw new this.HypoError('Invalid ctor or factory method for "'+n+'".');if(t){h(t);for(l=0;l<t.length;l++)s.push(this.parseProperty(t[l]))}return r?a=e.apply(r,s):(i.prototype=e.prototype,f=new i,a=e.apply(f,s)||f),a},applyProperties:function(e,t){if(t)for(var n in t)t.hasOwnProperty(n)&&(e[n]=this.parseProperty(t[n]))},parseProperty:function(e){var t=new this.HypoError("Invalid property or ctor argument definition."),n;if(!e)throw t;if(e.hasOwnProperty("hypo"))n=this;else if(e.hasOwnProperty("entity"))n=this.getEntity(e.entity);else{if(!e.hasOwnProperty("value"))throw t;n=e.value}return n},parseDefinition:function(e){var t=this.definitions[e],n,r,i,s;if(!t)throw new this.HypoError('Hypo Error: Invalid entity name + "'+e+'".');if(t.parent&&!t.parsed){parent=this.parseDefinition(t.parent);for(n in parent)if(n!="abstract"&&n!="parsed"&&parent.hasOwnProperty(n)&&(n=="props"||!t.hasOwnProperty(n)))if(n=="props"&&t.hasOwnProperty("props")){i=t.props,s=parent.props;for(r in s)s.hasOwnProperty(r)&&!i.hasOwnProperty(r)&&(i[r]=s[r])}else t[n]=parent[n]}return t.parsed=!0,t}},e})}(typeof define=="function"&&define.amd?define:typeof module!="undefined"&&module.exports?function(e,t){module.exports=t()}:function(e,t){window[e]=t()})